/*
 * queue.lmn - Queue module
 *
 *   Copyright (c) 2008, Ueda Laboratory LMNtal Group <lmntal@ueda.info.waseda.ac.jp>
 *   All rights reserved.
 *
 *   Redistribution and use in source and binary forms, with or without
 *   modification, are permitted provided that the following conditions are
 *   met:
 *
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in
 *       the documentation and/or other materials provided with the
 *       distribution.
 *
 *    3. Neither the name of the Ueda Laboratory LMNtal Group nor the
 *       names of its contributors may be used to endorse or promote
 *       products derived from this software without specific prior
 *       written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *   LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *   DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *   THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *   (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * $Id: boolean.lmn,v 1.3 2008/09/19 05:55:21 taisuke Exp $
 */


/*
NAME
	Queue module (ring)

SYNOPSIS
	r=shift(push(push(queue.new, [abc,def]),123),v1).
	===>
	v1([abc,def]), r(queue.new([123|_33],_33)), @602

	r=queue.of_list([1,2,3])
	===>
	r(queue.new([1,2,3|_54],_54)), @602

DESCRIPTION
	たぶんいろんな事するときにこれがよく使われるとおもう

AUTHOR
	Koji Hara

HISTORY
	2004/05/17(Mon)

*/

{
module(queue).

/**
 * new : unit -> Queue
 * 
 */
H=queue.new :- H=queue.new(Head, Tail), Head=Tail.

/**
 * is_empty
 * 
 */
H=is_empty(queue.new(Head, Head), Return) :- H=queue.new(Head, Head), Return=true.
H=is_empty(queue.new('.'(Obj, Head2), Tail), Return) :- H=queue.new('.'(Obj, Head2), Tail), Return=false.

/**
 * unshift
 * 
 */
H=unshift(queue.new(Head, Tail), Obj) :- H=queue.new('.'(Obj, Head), Tail).

/**
 * shift
 * 
 */
H=shift(queue.new('.'(Obj, Head), Tail), Return) :- H=queue.new(Head, Tail), Return=Obj.
H=shift(queue.new(Head, Head), Return) :- H=queue.new(Head, Head), Return=nil.

/**
 * push
 * 
 */
H=push(queue.new(Head, Tail), Obj) :- H=queue.new(Head, Tail2), '.'(Obj, Tail2, Tail).


/**
 * pop
 * 
 */
H=pop(queue.new(Head, Tail), Return), '.'(Obj, Tail, Tail2) :- H=queue.new(Head, Tail2), Return=Obj.
H=pop(queue.new(Head, Head), Return) :- H=queue.new(Head, Head), Return=nil.

/**
 * of_list
 * 
 * List -> Queue
 */
H=queue.of_list(List) :-
	H=queue.of_list_s0(List, queue.new).

H=queue.of_list_s0([], Queue) :- H=Queue.
H=queue.of_list_s0([Value|Next], Queue) :-
	H=queue.of_list_s0(Next, push(Queue, Value)).

queue.test :-
	t0=shift(push(push(queue.new, [abc,def]),123),v1),
	t1=queue.of_list([1,2,3]).
}

