Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L539, [0], [], []]
	--guard:L539:
		spec           [1, 1]
		jump           [L532, [0], [], []]
	--body:L532:
		spec           [1, 6]
		commit         ["_init", 0]
		newmem      [1, 0, 0]
		loadruleset    [1, @601]
		newatom     [2, 1, 'queue'_1]
		newatom     [3, 1, 'module'_1]
		alloclink   [4, 2, 0]
		alloclink   [5, 3, 0]
		unifylinks     [4, 5, 1]
		enqueueatom    [3]
		enqueueatom    [2]
		proceed        []


Compiled Ruleset @601             
Compiled Rule 
	--atommatch:
		spec           [2, 3]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'queue'.'new'_1]
		commit         ["_Hque", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'queue'.'new'_1]
		newatom     [2, 0, 'queue'.'new'_3]
		newlink        [2, 0, 2, 1, 0]
		relink         [2, 2, 1, 0, 0]
		enqueueatom    [2]
		loadmodule     [0, "queue"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 0, 1]
		eqatom         [2, 1]
		deref       [3, 1, 2, 0]
		func           [3, 'is_empty'_3]
		commit         ["_His_", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'is_empty'_3]
		newatom     [4, 0, 'queue'.'new'_3]
		newatom     [5, 0, 'true'_1]
		newlink        [4, 0, 4, 1, 0]
		relink         [4, 2, 3, 2, 0]
		relink         [5, 0, 3, 1, 0]
		enqueueatom    [5]
		enqueueatom    [4]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [3, 1, 2, 0]
		func           [3, 'is_empty'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_His_", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'is_empty'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [4, 0, '.'_3]
		newatom     [5, 0, 'queue'.'new'_3]
		newatom     [6, 0, 'false'_1]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [4, 2, 5, 0, 0]
		relink         [5, 1, 1, 1, 0]
		relink         [5, 2, 3, 2, 0]
		relink         [6, 0, 3, 1, 0]
		enqueueatom    [6]
		enqueueatom    [5]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 2, 0]
		func           [2, 'unshift'_3]
		commit         ["_Huns", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [2, 0, 'unshift'_3]
		newatom     [3, 0, '.'_3]
		newatom     [4, 0, 'queue'.'new'_3]
		relink         [3, 0, 2, 1, 0]
		relink         [3, 1, 1, 0, 0]
		newlink        [3, 2, 4, 0, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 2, 2, 0]
		enqueueatom    [4]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [3, 1, 2, 0]
		func           [3, 'shift'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hshi", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'shift'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [4, 0, 'queue'.'new'_3]
		unify          [3, 1, 2, 0, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 1, 1, 1, 0]
		relink         [4, 2, 3, 2, 0]
		enqueueatom    [4]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 0, 1]
		eqatom         [2, 1]
		deref       [3, 1, 2, 0]
		func           [3, 'shift'_3]
		commit         ["_Hshi", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'shift'_3]
		newatom     [4, 0, 'queue'.'new'_3]
		newatom     [5, 0, 'nil'_1]
		newlink        [4, 0, 4, 1, 0]
		relink         [4, 2, 3, 2, 0]
		relink         [5, 0, 3, 1, 0]
		enqueueatom    [5]
		enqueueatom    [4]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 2, 0]
		func           [2, 'push'_3]
		commit         ["_Hpus", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [2, 0, 'push'_3]
		newatom     [3, 0, 'queue'.'new'_3]
		newatom     [4, 0, '.'_3]
		relink         [3, 0, 1, 0, 0]
		newlink        [3, 1, 4, 1, 0]
		relink         [3, 2, 2, 2, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 2, 1, 1, 0]
		enqueueatom    [3]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 13]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [3, 1, 2, 0]
		func           [3, 'pop'_3]
		deref       [2, 1, 1, 1]
		func           [2, '.'_3]
		commit         ["_Hpop", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'pop'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [4, 0, 'queue'.'new'_3]
		unify          [3, 1, 2, 0, 0]
		relink         [4, 0, 1, 0, 0]
		relink         [4, 1, 2, 2, 0]
		relink         [4, 2, 3, 2, 0]
		enqueueatom    [4]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 0, 1]
		eqatom         [2, 1]
		deref       [3, 1, 2, 0]
		func           [3, 'pop'_3]
		commit         ["_Hpop", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'pop'_3]
		newatom     [4, 0, 'queue'.'new'_3]
		newatom     [5, 0, 'nil'_1]
		newlink        [4, 0, 4, 1, 0]
		relink         [4, 2, 3, 2, 0]
		relink         [5, 0, 3, 1, 0]
		enqueueatom    [5]
		enqueueatom    [4]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'queue'.'of_list'_2]
		commit         ["_Hque", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'queue'.'of_list'_2]
		newatom     [2, 0, 'queue'.'new'_1]
		newatom     [3, 0, 'queue'.'of_list_s0'_3]
		newlink        [2, 0, 3, 1, 0]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 2, 1, 1, 0]
		enqueueatom    [3]
		enqueueatom    [2]
		loadmodule     [0, "queue"]
		loadmodule     [0, "queue"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'queue'.'of_list_s0'_3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hque", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'of_list_s0'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'queue'.'of_list_s0'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hque", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'of_list_s0'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [3, 0, 'push'_3]
		newatom     [4, 0, 'queue'.'of_list_s0'_3]
		relink         [3, 0, 1, 1, 0]
		relink         [3, 1, 2, 0, 0]
		newlink        [3, 2, 4, 1, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 2, 1, 2, 0]
		enqueueatom    [4]
		enqueueatom    [3]
		loadmodule     [0, "queue"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 23]
		findatom    [1, 0, 'queue'.'test'_0]
		commit         ["_queu", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'queue'.'test'_0]
		newatom     [2, 0, 't0'_1]
		newatom     [3, 0, 'queue'.'new'_1]
		newatom     [4, 0, 'abc'_1]
		newatom     [5, 0, 'def'_1]
		newatom     [6, 0, '[]'_1]
		newatom     [7, 0, '.'_3]
		newatom     [8, 0, '.'_3]
		newatom     [9, 0, 'push'_3]
		newatom    [10, 0, 123_1]
		newatom    [11, 0, 'push'_3]
		newatom    [12, 0, 'v1'_1]
		newatom    [13, 0, 'shift'_3]
		newatom    [14, 0, 't1'_1]
		newatom    [15, 0, 1_1]
		newatom    [16, 0, 2_1]
		newatom    [17, 0, 3_1]
		newatom    [18, 0, '[]'_1]
		newatom    [19, 0, '.'_3]
		newatom    [20, 0, '.'_3]
		newatom    [21, 0, '.'_3]
		newatom    [22, 0, 'queue'.'of_list'_2]
		newlink        [2, 0, 13, 2, 0]
		newlink        [3, 0, 9, 0, 0]
		newlink        [4, 0, 8, 0, 0]
		newlink        [5, 0, 7, 0, 0]
		newlink        [6, 0, 7, 1, 0]
		newlink        [7, 2, 8, 1, 0]
		newlink        [8, 2, 9, 1, 0]
		newlink        [9, 2, 11, 0, 0]
		newlink        [10, 0, 11, 1, 0]
		newlink        [11, 2, 13, 0, 0]
		newlink        [12, 0, 13, 1, 0]
		newlink        [14, 0, 22, 1, 0]
		newlink        [15, 0, 21, 0, 0]
		newlink        [16, 0, 20, 0, 0]
		newlink        [17, 0, 19, 0, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [19, 2, 20, 1, 0]
		newlink        [20, 2, 21, 1, 0]
		newlink        [21, 2, 22, 0, 0]
		enqueueatom    [22]
		enqueueatom    [14]
		enqueueatom    [13]
		enqueueatom    [12]
		enqueueatom    [11]
		enqueueatom    [9]
		enqueueatom    [5]
		enqueueatom    [4]
		enqueueatom    [3]
		enqueueatom    [2]
		loadmodule     [0, "queue"]
		loadmodule     [0, "queue"]
		freeatom       [1]
		proceed        []


Module
'queue' {@601}
Inline
