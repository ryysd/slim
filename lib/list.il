Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L1322, [0], [], []]
	--guard:L1322:
		spec           [1, 1]
		jump           [L1315, [0], [], []]
	--body:L1315:
		spec           [1, 6]
		commit         ["_init", 0]
		newmem      [1, 0, 0]
		loadruleset    [1, @601]
		newatom     [2, 1, 'list'_1]
		newatom     [3, 1, 'module'_1]
		alloclink   [4, 2, 0]
		alloclink   [5, 3, 0]
		unifylinks     [4, 5, 1]
		enqueueatom    [3]
		enqueueatom    [2]
		proceed        []


Compiled Ruleset @601                                    
Compiled Rule 
	--atommatch:
		spec           [2, 3]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'list'.'new'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'list'.'new'_1]
		newatom     [2, 0, '[]'_1]
		relink         [2, 0, 1, 0, 0]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'is_empty'_3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'is_empty'_3]
		removeatom     [2, 0, '[]'_1]
		newatom     [3, 0, '[]'_1]
		newatom     [4, 0, 'true'_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		enqueueatom    [4]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'is_empty'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'is_empty'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [3, 0, '.'_3]
		newatom     [4, 0, 'false'_1]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 2, 1, 0]
		relink         [3, 2, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		enqueueatom    [4]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'list'.'append'_3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'append'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'append'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'append'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [3, 0, 'list'.'append'_3]
		newatom     [4, 0, '.'_3]
		relink         [3, 0, 2, 1, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [3, 2, 4, 1, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		enqueueatom    [3]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 0, 1]
		eqatom         [2, 1]
		deref       [3, 1, 2, 0]
		func           [3, 'list'.'of_queue'_2]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [3, 0, 'list'.'of_queue'_2]
		newatom     [4, 0, '[]'_1]
		relink         [4, 0, 3, 1, 0]
		freeatom       [1]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 2, 0]
		func           [2, 'list'.'of_queue'_2]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [2, 0, 'list'.'of_queue'_2]
		newatom     [3, 0, 'queue'.'new'_3]
		newatom     [4, 0, 'list'.'shift'_3]
		newatom     [5, 0, 'list'.'of_queue'_2]
		newatom     [6, 0, '.'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [3, 2, 4, 0, 0]
		newlink        [4, 1, 6, 0, 0]
		newlink        [4, 2, 5, 0, 0]
		newlink        [5, 1, 6, 1, 0]
		relink         [6, 2, 2, 1, 0]
		enqueueatom    [5]
		enqueueatom    [4]
		enqueueatom    [3]
		loadmodule     [0, "queue"]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'list'.'grep'_3]
		derefatom   [2, 1, 0]
		isunary        [2]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'list'.'grep'_3]
		dequeueatom    [2]
		removeatom     [2, 0]
		copyatom    [3, 0, 2]
		newatom     [4, 0, 'list'.'map'_3]
		newatom     [5, 0, 'list'.'grep_s0'_2]
		newlink        [4, 0, 3, 0, 0]
		relink         [4, 1, 1, 1, 0]
		newlink        [4, 2, 5, 0, 0]
		relink         [5, 1, 1, 2, 0]
		enqueueatom    [5]
		enqueueatom    [4]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 9]
		findatom    [1, 0, 'true'_1]
		deref       [2, 1, 0, 0]
		func           [2, '.'_3]
		deref       [4, 2, 2, 0]
		deref       [3, 2, 1, 2]
		func           [3, '.'_3]
		neqatom        [4, 3]
		deref       [5, 3, 1, 0]
		func           [5, '[]'_1]
		func           [4, '.'_3]
		deref       [6, 4, 2, 0]
		func           [6, 'list'.'grep_s0'_2]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [6]
		dequeueatom    [5]
		dequeueatom    [3]
		dequeueatom    [2]
		dequeueatom    [4]
		removeatom     [1, 0, 'true'_1]
		removeatom     [6, 0, 'list'.'grep_s0'_2]
		removeatom     [5, 0, '[]'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, '.'_3]
		newatom     [7, 0, 'list'.'grep_s0'_2]
		newatom     [8, 0, '.'_3]
		relink         [7, 0, 4, 1, 0]
		newlink        [7, 1, 8, 1, 0]
		relink         [8, 0, 3, 0, 0]
		relink         [8, 2, 6, 1, 0]
		enqueueatom    [7]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [6]
		freeatom       [5]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 9]
		findatom    [1, 0, 'false'_1]
		deref       [2, 1, 0, 0]
		func           [2, '.'_3]
		deref       [4, 2, 2, 0]
		deref       [3, 2, 1, 2]
		func           [3, '.'_3]
		neqatom        [4, 3]
		deref       [5, 3, 1, 0]
		func           [5, '[]'_1]
		func           [4, '.'_3]
		deref       [6, 4, 2, 0]
		func           [6, 'list'.'grep_s0'_2]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [6]
		dequeueatom    [5]
		dequeueatom    [3]
		dequeueatom    [2]
		dequeueatom    [4]
		removeatom     [1, 0, 'false'_1]
		removeatom     [6, 0, 'list'.'grep_s0'_2]
		removeatom     [5, 0, '[]'_1]
		removeatom     [3, 0, '.'_3]
		removeatom     [2, 0, '.'_3]
		removeatom     [4, 0, '.'_3]
		newatom     [7, 0, 'list'.'grep_s0'_2]
		newatom     [8, 0, 'nil'_1]
		relink         [7, 0, 4, 1, 0]
		relink         [7, 1, 6, 1, 0]
		relink         [8, 0, 3, 0, 0]
		enqueueatom    [8]
		enqueueatom    [7]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [6]
		freeatom       [5]
		freeatom       [3]
		freeatom       [2]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'list'.'grep_s0'_2]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'grep_s0'_2]
		removeatom     [2, 0, '[]'_1]
		newatom     [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'list'.'map'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'list'.'map'_3]
		newatom     [2, 0, '[]'_1]
		newatom     [3, 0, 'list'.'fold'_4]
		newlink        [2, 0, 3, 1, 0]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 2, 1, 1, 0]
		relink         [3, 3, 1, 2, 0]
		enqueueatom    [3]
		loadmodule     [0, "list"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'list'.'flatten'_2]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'flatten'_2]
		removeatom     [2, 0, '[]'_1]
		newatom     [3, 0, '[]'_1]
		relink         [3, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'list'.'flatten'_2]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		derefatom   [3, 2, 0]
		isunary        [3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'flatten'_2]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [3]
		removeatom     [3, 0]
		copyatom    [4, 0, 3]
		newatom     [5, 0, 'list'.'flatten'_2]
		newatom     [6, 0, '.'_3]
		relink         [5, 0, 2, 1, 0]
		newlink        [5, 1, 6, 1, 0]
		newlink        [6, 0, 4, 0, 0]
		relink         [6, 2, 1, 1, 0]
		enqueueatom    [5]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 12]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'list'.'flatten'_2]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		deref       [3, 2, 0, 2]
		func           [3, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'flatten'_2]
		removeatom     [3, 0, '.'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [4, 0, 'list'.'append'_3]
		newatom     [5, 0, '.'_3]
		newatom     [6, 0, 'list'.'flatten'_2]
		relink         [4, 0, 3, 1, 0]
		relink         [4, 1, 2, 1, 0]
		newlink        [4, 2, 5, 1, 0]
		relink         [5, 0, 3, 0, 0]
		newlink        [5, 2, 6, 0, 0]
		relink         [6, 1, 1, 1, 0]
		enqueueatom    [6]
		enqueueatom    [4]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 19]
		findatom    [1, 0, 'list'.'choose_k'_3]
		derefatom   [6, 1, 1]
		allocatom   [5, 0_1]
		samefunc       [5, 6]
		getlink     [4, 1, 2]
		getlink     [3, 1, 1]
		getlink     [2, 1, 0]
		newlist     [7]
		addtolist      [7, 2]
		newlist     [8]
		addtolist      [8, 3]
		addtolist      [8, 4]
		isground    [9, 7, 8]
		commit         ["_Hlis", 0]
		newlist    [10]
		getlink    [11, 1, 0]
		addtolist      [10, 11]
		dequeueatom    [1]
		removeatom     [1, 0, 'list'.'choose_k'_3]
		dequeueatom    [6]
		removeatom     [6, 0]
		removeground   [10, 0]
		getlink    [12, 1, 0]
		insertconnectorsinnull[13, [12]]
		newlist    [14]
		getlink    [15, 1, 0]
		addtolist      [14, 15]
		newatom    [16, 0, '[]'_1]
		newatom    [17, 0, '[]'_1]
		newatom    [18, 0, '.'_3]
		newlink        [16, 0, 18, 0, 0]
		newlink        [17, 0, 18, 1, 0]
		relink         [18, 2, 1, 2, 0]
		freeatom       [1]
		freeatom       [6]
		freeground     [14]
		freeatom       [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'list'.'choose_k'_3]
		derefatom   [3, 1, 1]
		isint          [3]
		allocatom   [4, 0_1]
		ine            [3, 4]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'choose_k'_3]
		removeatom     [2, 0, '[]'_1]
		dequeueatom    [3]
		removeatom     [3, 0]
		newatom     [5, 0, '[]'_1]
		relink         [5, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 53]
		findatom    [1, 0, 'list'.'choose_k'_3]
		derefatom   [7, 1, 1]
		isint          [7]
		getlink     [4, 1, 2]
		getlink     [3, 1, 1]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		getlink     [6, 2, 1]
		getlink     [5, 2, 0]
		newlist     [8]
		addtolist      [8, 6]
		newlist     [9]
		addtolist      [9, 3]
		addtolist      [9, 4]
		addtolist      [9, 5]
		isground   [10, 8, 9]
		commit         ["_Hlis", 0]
		newlist    [11]
		getlink    [12, 2, 1]
		addtolist      [11, 12]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'choose_k'_3]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [7]
		removeatom     [7, 0]
		removeground   [11, 0]
		getlink    [13, 2, 1]
		insertconnectorsinnull[14, [13]]
		newlist    [15]
		getlink    [16, 2, 1]
		addtolist      [15, 16]
		copyatom   [17, 0, 7]
		copyatom   [18, 0, 7]
		copyground [19, 15, 0]
		getfromlist[20, 19, 0]
		getfromlist[21, 19, 1]
		copyground [22, 15, 0]
		getfromlist[23, 22, 0]
		getfromlist[24, 22, 1]
		newatom    [25, 0, 1_1]
		newatom    [26, 0, '-'_3]
		newatom    [27, 0, 'list'.'choose_k'_3]
		newatom    [28, 0, 'list'.'dist'_3]
		newatom    [29, 0, 'list'.'choose_k'_3]
		newatom    [30, 0, 'list'.'append'_3]
		alloclink  [31, 30, 2]
		alloclink  [32, 30, 1]
		alloclink  [33, 29, 2]
		alloclink  [34, 18, 0]
		alloclink  [35, 29, 1]
		alloclink  [36, 29, 0]
		alloclink  [37, 30, 0]
		alloclink  [38, 28, 2]
		alloclink  [39, 28, 0]
		alloclink  [40, 28, 1]
		alloclink  [41, 27, 2]
		alloclink  [42, 27, 0]
		alloclink  [43, 27, 1]
		alloclink  [44, 26, 2]
		alloclink  [45, 17, 0]
		alloclink  [46, 26, 0]
		alloclink  [47, 26, 1]
		alloclink  [48, 25, 0]
		getfromlist[49, 23, 0]
		getfromlist[50, 20, 0]
		unifylinks     [48, 47, 0]
		unifylinks     [46, 45, 0]
		unifylinks     [44, 43, 0]
		unifylinks     [42, 50, 0]
		unifylinks     [41, 40, 0]
		getlink    [51, 2, 0]
		unifylinks     [39, 51, 0]
		unifylinks     [38, 37, 0]
		unifylinks     [36, 49, 0]
		unifylinks     [35, 34, 0]
		unifylinks     [33, 32, 0]
		getlink    [52, 1, 2]
		unifylinks     [31, 52, 0]
		deleteconnectors[14, 21]
		deleteconnectors[14, 24]
		enqueueatom    [30]
		enqueueatom    [29]
		enqueueatom    [28]
		enqueueatom    [27]
		enqueueatom    [26]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [7]
		freeground     [15]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 15]
		findatom    [1, 0, 'list'.'dist'_3]
		getlink     [4, 1, 2]
		getlink     [3, 1, 0]
		deref       [2, 1, 1, 0]
		func           [2, '[]'_1]
		newlist     [5]
		addtolist      [5, 3]
		newlist     [6]
		addtolist      [6, 4]
		isground    [7, 5, 6]
		commit         ["_Hlis", 0]
		newlist     [8]
		getlink     [9, 1, 0]
		addtolist      [8, 9]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'dist'_3]
		removeatom     [2, 0, '[]'_1]
		removeground   [8, 0]
		getlink    [10, 1, 0]
		insertconnectorsinnull[11, [10]]
		newlist    [12]
		getlink    [13, 1, 0]
		addtolist      [12, 13]
		newatom    [14, 0, '[]'_1]
		relink         [14, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeground     [12]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 39]
		findatom    [1, 0, 'list'.'dist'_3]
		getlink     [4, 1, 2]
		getlink     [3, 1, 0]
		deref       [2, 1, 1, 2]
		func           [2, '.'_3]
		getlink     [6, 2, 1]
		getlink     [5, 2, 0]
		newlist     [7]
		addtolist      [7, 3]
		newlist     [8]
		addtolist      [8, 4]
		addtolist      [8, 5]
		addtolist      [8, 6]
		isground    [9, 7, 8]
		commit         ["_Hlis", 0]
		newlist    [10]
		getlink    [11, 1, 0]
		addtolist      [10, 11]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'dist'_3]
		removeatom     [2, 0, '.'_3]
		removeground   [10, 0]
		getlink    [12, 1, 0]
		insertconnectorsinnull[13, [12]]
		newlist    [14]
		getlink    [15, 1, 0]
		addtolist      [14, 15]
		copyground [16, 14, 0]
		getfromlist[17, 16, 0]
		getfromlist[18, 16, 1]
		copyground [19, 14, 0]
		getfromlist[20, 19, 0]
		getfromlist[21, 19, 1]
		newatom    [22, 0, '.'_3]
		newatom    [23, 0, 'list'.'dist'_3]
		newatom    [24, 0, '.'_3]
		alloclink  [25, 24, 2]
		alloclink  [26, 24, 1]
		alloclink  [27, 23, 2]
		alloclink  [28, 23, 1]
		alloclink  [29, 23, 0]
		alloclink  [30, 24, 0]
		alloclink  [31, 22, 2]
		alloclink  [32, 22, 1]
		alloclink  [33, 22, 0]
		getfromlist[34, 17, 0]
		getfromlist[35, 20, 0]
		unifylinks     [33, 34, 0]
		getlink    [36, 2, 0]
		unifylinks     [32, 36, 0]
		unifylinks     [31, 30, 0]
		unifylinks     [29, 35, 0]
		getlink    [37, 2, 1]
		unifylinks     [28, 37, 0]
		unifylinks     [27, 26, 0]
		getlink    [38, 1, 2]
		unifylinks     [25, 38, 0]
		deleteconnectors[13, 18]
		deleteconnectors[13, 21]
		enqueueatom    [23]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeground     [14]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 6]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'split'_4]
		derefatom   [3, 1, 1]
		allocatom   [2, 0_1]
		samefunc       [2, 3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'list'.'split'_4]
		dequeueatom    [3]
		removeatom     [3, 0]
		newatom     [4, 0, '[]'_1]
		unify          [1, 2, 1, 0, 0]
		relink         [4, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'list'.'split'_4]
		derefatom   [3, 1, 1]
		isint          [3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'split'_4]
		removeatom     [2, 0, '[]'_1]
		dequeueatom    [3]
		removeatom     [3, 0]
		newatom     [4, 0, '[]'_1]
		newatom     [5, 0, '[]'_1]
		relink         [4, 0, 1, 3, 0]
		relink         [5, 0, 1, 2, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 10]
		findatom    [1, 0, 'list'.'split'_4]
		derefatom   [4, 1, 1]
		isint          [4]
		allocatom   [3, 0_1]
		igt            [4, 3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'split'_4]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		copyatom    [5, 0, 4]
		newatom     [6, 0, 1_1]
		newatom     [7, 0, '-'_3]
		newatom     [8, 0, 'list'.'split'_4]
		newatom     [9, 0, '.'_3]
		newlink        [6, 0, 7, 1, 0]
		newlink        [7, 0, 5, 0, 0]
		newlink        [7, 2, 8, 1, 0]
		relink         [8, 0, 2, 1, 0]
		relink         [8, 2, 1, 2, 0]
		newlink        [8, 3, 9, 1, 0]
		relink         [9, 0, 2, 0, 0]
		relink         [9, 2, 1, 3, 0]
		enqueueatom    [8]
		enqueueatom    [7]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'list'.'length'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'length'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [3, 0, 'list'.'length'_3]
		newatom     [4, 0, '.'_3]
		newatom     [5, 0, 1_1]
		newatom     [6, 0, '+'_3]
		relink         [3, 0, 2, 1, 0]
		newlink        [3, 1, 6, 0, 0]
		newlink        [3, 2, 4, 1, 0]
		relink         [4, 0, 2, 0, 0]
		relink         [4, 2, 1, 2, 0]
		newlink        [5, 0, 6, 1, 0]
		relink         [6, 2, 1, 1, 0]
		enqueueatom    [6]
		enqueueatom    [3]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'length'_3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'length'_3]
		removeatom     [2, 0, '[]'_1]
		newatom     [3, 0, '[]'_1]
		newatom     [4, 0, 0_1]
		relink         [3, 0, 1, 2, 0]
		relink         [4, 0, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'list'.'update'_5]
		derefatom   [4, 1, 1]
		isint          [4]
		allocatom   [3, 0_1]
		igt            [4, 3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'update'_5]
		removeatom     [2, 0, '[]'_1]
		dequeueatom    [4]
		removeatom     [4, 0]
		unify          [1, 4, 1, 2, 0]
		newatom     [5, 0, '[]'_1]
		relink         [5, 0, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'list'.'update'_5]
		derefatom   [4, 1, 1]
		allocatom   [3, 0_1]
		samefunc       [3, 4]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'update'_5]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		unify          [1, 4, 2, 0, 0]
		newatom     [5, 0, '.'_3]
		relink         [5, 0, 1, 2, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 3, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 10]
		findatom    [1, 0, 'list'.'update'_5]
		derefatom   [4, 1, 1]
		isint          [4]
		allocatom   [3, 0_1]
		igt            [4, 3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'update'_5]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		copyatom    [5, 0, 4]
		newatom     [6, 0, 1_1]
		newatom     [7, 0, '-'_3]
		newatom     [8, 0, 'list'.'update'_5]
		newatom     [9, 0, '.'_3]
		newlink        [6, 0, 7, 1, 0]
		newlink        [7, 0, 5, 0, 0]
		newlink        [7, 2, 8, 1, 0]
		relink         [8, 0, 2, 1, 0]
		relink         [8, 2, 1, 2, 0]
		newlink        [8, 3, 9, 1, 0]
		relink         [8, 4, 1, 4, 0]
		relink         [9, 0, 2, 0, 0]
		relink         [9, 2, 1, 3, 0]
		enqueueatom    [8]
		enqueueatom    [7]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'get'_4]
		derefatom   [4, 1, 1]
		allocatom   [3, 0_1]
		samefunc       [3, 4]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'get'_4]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		unify          [1, 2, 2, 0, 0]
		unify          [1, 3, 2, 1, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 10]
	--memmatch:
		spec           [1, 10]
		findatom    [1, 0, 'list'.'get'_4]
		derefatom   [4, 1, 1]
		isint          [4]
		allocatom   [3, 0_1]
		igt            [4, 3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'get'_4]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		copyatom    [5, 0, 4]
		newatom     [6, 0, 1_1]
		newatom     [7, 0, '-'_3]
		newatom     [8, 0, 'list'.'get'_4]
		newatom     [9, 0, '.'_3]
		newlink        [6, 0, 7, 1, 0]
		newlink        [7, 0, 5, 0, 0]
		newlink        [7, 2, 8, 1, 0]
		relink         [8, 0, 2, 1, 0]
		relink         [8, 2, 1, 2, 0]
		newlink        [8, 3, 9, 1, 0]
		relink         [9, 0, 2, 0, 0]
		relink         [9, 2, 1, 3, 0]
		enqueueatom    [8]
		enqueueatom    [7]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [4]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'set'_5]
		derefatom   [3, 1, 1]
		isint          [3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'set'_5]
		removeatom     [2, 0, '[]'_1]
		dequeueatom    [3]
		removeatom     [3, 0]
		newatom     [4, 0, '[]'_1]
		unify          [1, 3, 1, 2, 0]
		relink         [4, 0, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'list'.'set'_5]
		derefatom   [4, 1, 1]
		allocatom   [3, 0_1]
		samefunc       [3, 4]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'set'_5]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		newatom     [5, 0, '.'_3]
		unify          [1, 3, 2, 0, 0]
		relink         [5, 0, 1, 2, 0]
		relink         [5, 1, 2, 1, 0]
		relink         [5, 2, 1, 4, 0]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 11]
	--memmatch:
		spec           [1, 10]
		findatom    [1, 0, 'list'.'set'_5]
		derefatom   [4, 1, 1]
		isint          [4]
		allocatom   [3, 0_1]
		igt            [4, 3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'set'_5]
		removeatom     [2, 0, '.'_3]
		dequeueatom    [4]
		removeatom     [4, 0]
		copyatom    [5, 0, 4]
		newatom     [6, 0, 1_1]
		newatom     [7, 0, '-'_3]
		newatom     [8, 0, 'list'.'set'_5]
		newatom     [9, 0, '.'_3]
		newlink        [6, 0, 7, 1, 0]
		newlink        [7, 0, 5, 0, 0]
		newlink        [7, 2, 8, 1, 0]
		relink         [8, 0, 2, 1, 0]
		relink         [8, 2, 1, 2, 0]
		relink         [8, 3, 1, 3, 0]
		newlink        [8, 4, 9, 1, 0]
		relink         [9, 0, 2, 0, 0]
		relink         [9, 2, 1, 4, 0]
		enqueueatom    [8]
		enqueueatom    [7]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		freeatom       [3]
		freeatom       [4]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 4]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'list'.'reverse'_2]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'list'.'reverse'_2]
		newatom     [2, 0, '[]'_1]
		newatom     [3, 0, 'list'.'reverse'_3]
		newlink        [2, 0, 3, 1, 0]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 2, 1, 1, 0]
		enqueueatom    [3]
		loadmodule     [0, "list"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 7]
	--memmatch:
		spec           [1, 3]
		findatom    [1, 0, 'list'.'reverse'_3]
		deref       [2, 1, 0, 0]
		func           [2, '[]'_1]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'reverse'_3]
		removeatom     [2, 0, '[]'_1]
		unify          [1, 2, 1, 1, 0]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 9]
	--memmatch:
		spec           [1, 5]
		findatom    [1, 0, 'list'.'reverse'_3]
		deref       [2, 1, 0, 2]
		func           [2, '.'_3]
		commit         ["_Hlis", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'list'.'reverse'_3]
		removeatom     [2, 0, '.'_3]
		newatom     [3, 0, '.'_3]
		newatom     [4, 0, 'list'.'reverse'_3]
		relink         [3, 0, 2, 0, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [3, 2, 4, 1, 0]
		relink         [4, 0, 2, 1, 0]
		relink         [4, 2, 1, 2, 0]
		enqueueatom    [4]
		loadmodule     [0, "list"]
		freeatom       [1]
		freeatom       [2]
		proceed        []


Module
'list' {@601}
Inline
