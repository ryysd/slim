Compiled Ruleset @602 
Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 1]
		jump           [L593, [0], [], []]
	--guard:L593:
		spec           [1, 1]
		jump           [L586, [0], [], []]
	--body:L586:
		spec           [1, 6]
		commit         ["_init", 0]
		newmem      [1, 0, 0]
		loadruleset    [1, @601]
		newatom     [2, 1, 'map'_1]
		newatom     [3, 1, 'module'_1]
		alloclink   [4, 2, 0]
		alloclink   [5, 3, 0]
		unifylinks     [4, 5, 1]
		enqueueatom    [3]
		enqueueatom    [2]
		proceed        []


Compiled Ruleset @601           
Compiled Rule 
	--atommatch:
		spec           [2, 3]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'map'.'new'_1]
		commit         ["_Hmap", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'map'.'new'_1]
		newmem      [2, 0, 0]
		newatom     [3, 2, 'obj'_1]
		newatom     [4, 2, $in_2]
		newatom     [5, 0, 'map'.'new'_2]
		newatom     [6, 0, $out_2]
		newlink        [3, 0, 4, 1, 2]
		newlink        [5, 0, 6, 1, 0]
		relink         [5, 1, 1, 0, 0]
		newlink        [6, 0, 4, 0, 0]
		enqueueatom    [5]
		enqueueatom    [3]
		loadmodule     [0, "map"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 20]
		findatom    [1, 0, 'map'.'new'_2]
		deref       [3, 1, 1, 0]
		func           [3, 'put'_4]
		derefatom   [9, 3, 2]
		isunary        [9]
		derefatom   [8, 3, 1]
		isunary        [8]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		deref       [6, 4, 1, 0]
		func           [6, 'obj'_1]
		lockmem     [5, 4, null]
		norules        [5]
		findatom    [7, 5, '.'_2]
		derefatom  [11, 7, 0]
		samefunc       [8, 11]
		derefatom  [10, 7, 1]
		isunary        [10]
		commit         ["_Hput", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [6]
		dequeueatom    [7]
		removeatom     [1, 0, 'map'.'new'_2]
		removeatom     [3, 0, 'put'_4]
		removeatom     [2, 0, $out_2]
		removeatom     [6, 5, 'obj'_1]
		removeatom     [7, 5, '.'_2]
		removeatom     [4, 5, $in_2]
		dequeueatom    [9]
		removeatom     [9, 0]
		dequeueatom    [10]
		removeatom     [10, 5]
		dequeueatom    [11]
		removeatom     [11, 5]
		dequeueatom    [8]
		removeatom     [8, 0]
		removeproxies  [5]
		enqueuemem     [5]
		insertproxies  [0, 5]
		copyatom   [13, 5, 9]
		copyatom   [14, 5, 8]
		newatom    [15, 5, 'obj'_1]
		newatom    [16, 5, '.'_2]
		newatom    [17, 5, $in_2]
		newatom    [18, 0, 'map'.'new'_2]
		newatom    [19, 0, $out_2]
		newlink        [15, 0, 17, 1, 5]
		newlink        [16, 0, 14, 0, 5]
		newlink        [16, 1, 13, 0, 5]
		newlink        [18, 0, 19, 1, 0]
		relink         [18, 1, 3, 3, 0]
		newlink        [19, 0, 17, 0, 0]
		enqueueatom    [18]
		enqueueatom    [16]
		enqueueatom    [15]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [7]
		freeatom       [4]
		freeatom       [9]
		freeatom       [10]
		freeatom       [11]
		freeatom       [8]
		unlockmem      [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 18]
	--memmatch:
		spec           [1, 17]
		findatom    [1, 0, 'map'.'new'_2]
		deref       [3, 1, 1, 0]
		func           [3, 'put'_4]
		derefatom   [8, 3, 2]
		isunary        [8]
		derefatom   [7, 3, 1]
		isunary        [7]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		deref       [6, 4, 1, 0]
		func           [6, 'obj'_1]
		lockmem     [5, 4, null]
		norules        [5]
		commit         ["_Hput", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [6]
		removeatom     [1, 0, 'map'.'new'_2]
		removeatom     [3, 0, 'put'_4]
		removeatom     [2, 0, $out_2]
		removeatom     [6, 5, 'obj'_1]
		removeatom     [4, 5, $in_2]
		dequeueatom    [8]
		removeatom     [8, 0]
		dequeueatom    [7]
		removeatom     [7, 0]
		removeproxies  [5]
		enqueuemem     [5]
		insertproxies  [0, 5]
		copyatom   [10, 5, 8]
		copyatom   [11, 5, 7]
		newatom    [12, 5, 'obj'_1]
		newatom    [13, 5, '.'_2]
		newatom    [14, 5, $in_2]
		newatom    [15, 0, 'map'.'new'_2]
		newatom    [16, 0, $out_2]
		newlink        [12, 0, 14, 1, 5]
		newlink        [13, 0, 11, 0, 5]
		newlink        [13, 1, 10, 0, 5]
		newlink        [15, 0, 16, 1, 0]
		relink         [15, 1, 3, 3, 0]
		newlink        [16, 0, 14, 0, 0]
		enqueueatom    [15]
		enqueueatom    [13]
		enqueueatom    [12]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [4]
		freeatom       [8]
		freeatom       [7]
		unlockmem      [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 21]
	--memmatch:
		spec           [1, 20]
		findatom    [1, 0, 'map'.'new'_2]
		deref       [3, 1, 1, 0]
		func           [3, 'get'_4]
		derefatom   [8, 3, 1]
		isunary        [8]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		deref       [6, 4, 1, 0]
		func           [6, 'obj'_1]
		lockmem     [5, 4, null]
		norules        [5]
		findatom    [7, 5, '.'_2]
		derefatom  [10, 7, 0]
		samefunc       [8, 10]
		derefatom   [9, 7, 1]
		isunary        [9]
		commit         ["_Hget", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [6]
		dequeueatom    [7]
		removeatom     [1, 0, 'map'.'new'_2]
		removeatom     [3, 0, 'get'_4]
		removeatom     [2, 0, $out_2]
		removeatom     [6, 5, 'obj'_1]
		removeatom     [7, 5, '.'_2]
		removeatom     [4, 5, $in_2]
		dequeueatom    [9]
		removeatom     [9, 5]
		dequeueatom    [10]
		removeatom     [10, 5]
		dequeueatom    [8]
		removeatom     [8, 0]
		removeproxies  [5]
		enqueuemem     [5]
		insertproxies  [0, 5]
		copyatom   [12, 5, 9]
		copyatom   [13, 0, 9]
		copyatom   [14, 5, 10]
		newatom    [15, 5, 'obj'_1]
		newatom    [16, 5, '.'_2]
		newatom    [17, 5, $in_2]
		newatom    [18, 0, 'map'.'new'_2]
		newatom    [19, 0, $out_2]
		newlink        [15, 0, 17, 1, 5]
		newlink        [16, 0, 14, 0, 5]
		newlink        [16, 1, 12, 0, 5]
		newlink        [18, 0, 19, 1, 0]
		relink         [18, 1, 3, 3, 0]
		newlink        [19, 0, 17, 0, 0]
		relink         [13, 0, 3, 2, 0]
		enqueueatom    [18]
		enqueueatom    [16]
		enqueueatom    [15]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [7]
		freeatom       [4]
		freeatom       [9]
		freeatom       [10]
		freeatom       [8]
		unlockmem      [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 20]
	--memmatch:
		spec           [1, 16]
		findatom    [1, 0, 'map'.'new'_2]
		deref       [3, 1, 1, 0]
		func           [3, 'get'_3]
		derefatom   [8, 3, 1]
		isunary        [8]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		deref       [6, 4, 1, 0]
		func           [6, 'obj'_1]
		lockmem     [5, 4, null]
		norules        [5]
		findatom    [7, 5, '.'_2]
		derefatom  [10, 7, 0]
		samefunc       [8, 10]
		derefatom   [9, 7, 1]
		isunary        [9]
		commit         ["_Hget", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [6]
		dequeueatom    [7]
		removeatom     [1, 0, 'map'.'new'_2]
		removeatom     [3, 0, 'get'_3]
		removeatom     [2, 0, $out_2]
		removeatom     [6, 5, 'obj'_1]
		removeatom     [7, 5, '.'_2]
		removeatom     [4, 5, $in_2]
		dequeueatom    [9]
		removeatom     [9, 5]
		dequeueatom    [10]
		removeatom     [10, 5]
		dequeueatom    [8]
		removeatom     [8, 0]
		removeproxies  [5]
		enqueuemem     [5]
		insertproxies  [0, 5]
		newatom    [12, 5, 'obj'_1]
		newatom    [13, 5, $in_2]
		newatom    [14, 0, 'map'.'new'_2]
		newatom    [15, 0, $out_2]
		newlink        [12, 0, 13, 1, 5]
		newlink        [14, 0, 15, 1, 0]
		relink         [14, 1, 3, 2, 0]
		newlink        [15, 0, 13, 0, 0]
		enqueueatom    [14]
		enqueueatom    [12]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [7]
		freeatom       [4]
		freeatom       [9]
		freeatom       [10]
		freeatom       [8]
		unlockmem      [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 17]
	--memmatch:
		spec           [1, 13]
		findatom    [1, 0, 'map'.'new'_2]
		deref       [3, 1, 1, 0]
		func           [3, 'is_empty'_3]
		deref       [2, 1, 0, 1]
		func           [2, $out_2]
		deref       [4, 2, 0, 0]
		func           [4, $in_2]
		deref       [6, 4, 1, 0]
		func           [6, 'obj'_1]
		lockmem     [5, 4, null]
		natoms         [5, 1]
		nmems          [5, 0]
		norules        [5]
		commit         ["_His_", 0]
		dequeueatom    [1]
		dequeueatom    [3]
		dequeueatom    [6]
		removeatom     [1, 0, 'map'.'new'_2]
		removeatom     [3, 0, 'is_empty'_3]
		removeatom     [2, 0, $out_2]
		removeatom     [6, 5, 'obj'_1]
		removeatom     [4, 5, $in_2]
		enqueuemem     [5]
		newatom     [8, 5, 'obj'_1]
		newatom     [9, 5, $in_2]
		newatom    [10, 0, 'map'.'new'_2]
		newatom    [11, 0, 'true'_1]
		newatom    [12, 0, $out_2]
		newlink        [8, 0, 9, 1, 5]
		newlink        [10, 0, 12, 1, 0]
		relink         [10, 1, 3, 2, 0]
		relink         [11, 0, 3, 1, 0]
		newlink        [12, 0, 9, 0, 0]
		enqueueatom    [11]
		enqueueatom    [10]
		enqueueatom    [8]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [3]
		freeatom       [2]
		freeatom       [6]
		freeatom       [4]
		unlockmem      [5]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 6]
		findatom    [1, 0, 'queue'.'new'_3]
		deref       [2, 1, 2, 0]
		func           [2, 'map'.'of_queue'_2]
		commit         ["_Hmap", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'queue'.'new'_3]
		removeatom     [2, 0, 'map'.'of_queue'_2]
		newatom     [3, 0, 'queue'.'new'_3]
		newatom     [4, 0, 'map'.'new'_1]
		newatom     [5, 0, 'map'.'of_queue_s0'_3]
		relink         [3, 0, 1, 0, 0]
		relink         [3, 1, 1, 1, 0]
		newlink        [3, 2, 5, 0, 0]
		newlink        [4, 0, 5, 1, 0]
		relink         [5, 2, 2, 1, 0]
		enqueueatom    [5]
		enqueueatom    [4]
		enqueueatom    [3]
		loadmodule     [0, "queue"]
		loadmodule     [0, "map"]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 5]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'map'.'of_queue_s0'_3]
		commit         ["_Hmap", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'map'.'of_queue_s0'_3]
		newatom     [2, 0, 'is_empty'_3]
		newatom     [3, 0, 'map'.'of_queue_s0'_4]
		relink         [2, 0, 1, 0, 0]
		newlink        [2, 1, 3, 2, 0]
		newlink        [2, 2, 3, 0, 0]
		relink         [3, 1, 1, 1, 0]
		relink         [3, 3, 1, 2, 0]
		enqueueatom    [3]
		enqueueatom    [2]
		loadmodule     [0, "map"]
		freeatom       [1]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 4]
		findatom    [1, 0, 'true'_1]
		deref       [2, 1, 0, 2]
		func           [2, 'map'.'of_queue_s0'_4]
		commit         ["_Hmap", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'true'_1]
		removeatom     [2, 0, 'map'.'of_queue_s0'_4]
		unify          [2, 3, 2, 1, 0]
		newatom     [3, 0, 'nil'_1]
		relink         [3, 0, 2, 0, 0]
		enqueueatom    [3]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 8]
	--memmatch:
		spec           [1, 7]
		findatom    [1, 0, 'false'_1]
		deref       [2, 1, 0, 2]
		func           [2, 'map'.'of_queue_s0'_4]
		commit         ["_Hmap", 0]
		dequeueatom    [1]
		dequeueatom    [2]
		removeatom     [1, 0, 'false'_1]
		removeatom     [2, 0, 'map'.'of_queue_s0'_4]
		newatom     [3, 0, 'shift'_3]
		newatom     [4, 0, 'shift'_3]
		newatom     [5, 0, 'put'_4]
		newatom     [6, 0, 'map'.'of_queue_s0'_3]
		relink         [3, 0, 2, 0, 0]
		newlink        [3, 1, 5, 1, 0]
		newlink        [3, 2, 4, 0, 0]
		newlink        [4, 1, 5, 2, 0]
		newlink        [4, 2, 6, 0, 0]
		relink         [5, 0, 2, 1, 0]
		newlink        [5, 3, 6, 1, 0]
		relink         [6, 2, 2, 3, 0]
		enqueueatom    [6]
		enqueueatom    [5]
		enqueueatom    [4]
		enqueueatom    [3]
		loadmodule     [0, "map"]
		freeatom       [1]
		freeatom       [2]
		proceed        []

Compiled Rule 
	--atommatch:
		spec           [2, 2]
	--memmatch:
		spec           [1, 27]
		findatom    [1, 0, 'map'.'test'_0]
		commit         ["_mapt", 0]
		dequeueatom    [1]
		removeatom     [1, 0, 'map'.'test'_0]
		newatom     [2, 0, 't0'_1]
		newatom     [3, 0, 'map'.'new'_1]
		newatom     [4, 0, 'jack'_1]
		newatom     [5, 0, 'enigma'_1]
		newatom     [6, 0, 'put'_4]
		newatom     [7, 0, 'nina'_1]
		newatom     [8, 0, 'myers'_1]
		newatom     [9, 0, 'put'_4]
		newatom    [10, 0, 'jack'_1]
		newatom    [11, 0, 'bauer'_1]
		newatom    [12, 0, 'put'_4]
		newatom    [13, 0, 'jack'_1]
		newatom    [14, 0, 'jack_is'_1]
		newatom    [15, 0, 'get'_4]
		newatom    [16, 0, 't1'_1]
		newatom    [17, 0, 'queue'.'new'_1]
		newatom    [18, 0, 'k0'_1]
		newatom    [19, 0, 'push'_3]
		newatom    [20, 0, 'v0'_1]
		newatom    [21, 0, 'push'_3]
		newatom    [22, 0, 'k1'_1]
		newatom    [23, 0, 'push'_3]
		newatom    [24, 0, 'v1'_1]
		newatom    [25, 0, 'push'_3]
		newatom    [26, 0, 'map'.'of_queue'_2]
		newlink        [2, 0, 15, 3, 0]
		newlink        [3, 0, 6, 0, 0]
		newlink        [4, 0, 6, 1, 0]
		newlink        [5, 0, 6, 2, 0]
		newlink        [6, 3, 9, 0, 0]
		newlink        [7, 0, 9, 1, 0]
		newlink        [8, 0, 9, 2, 0]
		newlink        [9, 3, 12, 0, 0]
		newlink        [10, 0, 12, 1, 0]
		newlink        [11, 0, 12, 2, 0]
		newlink        [12, 3, 15, 0, 0]
		newlink        [13, 0, 15, 1, 0]
		newlink        [14, 0, 15, 2, 0]
		newlink        [16, 0, 26, 1, 0]
		newlink        [17, 0, 19, 0, 0]
		newlink        [18, 0, 19, 1, 0]
		newlink        [19, 2, 21, 0, 0]
		newlink        [20, 0, 21, 1, 0]
		newlink        [21, 2, 23, 0, 0]
		newlink        [22, 0, 23, 1, 0]
		newlink        [23, 2, 25, 0, 0]
		newlink        [24, 0, 25, 1, 0]
		newlink        [25, 2, 26, 0, 0]
		enqueueatom    [26]
		enqueueatom    [25]
		enqueueatom    [24]
		enqueueatom    [23]
		enqueueatom    [22]
		enqueueatom    [21]
		enqueueatom    [20]
		enqueueatom    [19]
		enqueueatom    [18]
		enqueueatom    [17]
		enqueueatom    [16]
		enqueueatom    [15]
		enqueueatom    [14]
		enqueueatom    [13]
		enqueueatom    [12]
		enqueueatom    [11]
		enqueueatom    [10]
		enqueueatom    [9]
		enqueueatom    [8]
		enqueueatom    [7]
		enqueueatom    [6]
		enqueueatom    [5]
		enqueueatom    [4]
		enqueueatom    [3]
		enqueueatom    [2]
		loadmodule     [0, "map"]
		loadmodule     [0, "queue"]
		loadmodule     [0, "map"]
		freeatom       [1]
		proceed        []


Module
'map' {@601}
Inline
