# Makefile.in generated by automake 1.12.4 from Makefile.am.
# src/verifier/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2012 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__make_dryrun = \
  { \
    am__dry=no; \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        echo 'am--echo: ; @echo "AM"  OK' | $(MAKE) -f - 2>/dev/null \
          | grep '^AM OK$$' >/dev/null || am__dry=yes;; \
      *) \
        for am__flg in $$MAKEFLAGS; do \
          case $$am__flg in \
            *=*|--*) ;; \
            *n*) am__dry=yes; break;; \
          esac; \
        done;; \
    esac; \
    test $$am__dry = yes; \
  }
pkgdatadir = $(datadir)/slim
pkgincludedir = $(includedir)/slim
pkglibdir = $(libdir)/slim
pkglibexecdir = $(libexecdir)/slim
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-apple-darwin12.0.0
host_triplet = x86_64-apple-darwin12.0.0
target_triplet = x86_64-apple-darwin12.0.0
subdir = src/verifier
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(top_srcdir)/depcomp $(top_srcdir)/mkinstalldirs \
	$(top_srcdir)/ylwrap nc_lexer.c nc_parser.c nc_parser.h \
	propsym_lexer.c propsym_parser.c propsym_parser.h
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ac_have_attribute.m4 \
	$(top_srcdir)/m4/acx_nanosleep.m4 \
	$(top_srcdir)/m4/acx_pthread.m4 \
	$(top_srcdir)/m4/compiler_characteristics.m4 \
	$(top_srcdir)/m4/install_prefix.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/m4/namespaces.m4 \
	$(top_srcdir)/m4/pc_from_ucontext.m4 \
	$(top_srcdir)/m4/program_invocation_name.m4 \
	$(top_srcdir)/m4/stl_namespace.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
liblmn_verifier_a_AR = $(AR) $(ARFLAGS)
liblmn_verifier_a_LIBADD =
am_liblmn_verifier_a_OBJECTS = liblmn_verifier_a-nc_parser.$(OBJEXT) \
	liblmn_verifier_a-nc_lexer.$(OBJEXT) \
	liblmn_verifier_a-propsym_parser.$(OBJEXT) \
	liblmn_verifier_a-propsym_lexer.$(OBJEXT) \
	liblmn_verifier_a-propositional_symbol.$(OBJEXT) \
	liblmn_verifier_a-automata.$(OBJEXT) \
	liblmn_verifier_a-ltl2ba_adapter.$(OBJEXT) \
	liblmn_verifier_a-mc.$(OBJEXT) \
	liblmn_verifier_a-mc_worker.$(OBJEXT) \
	liblmn_verifier_a-mc_generator.$(OBJEXT) \
	liblmn_verifier_a-mc_explorer.$(OBJEXT) \
	liblmn_verifier_a-mhash.$(OBJEXT) \
	liblmn_verifier_a-dpor.$(OBJEXT) \
	liblmn_verifier_a-dpor_naive.$(OBJEXT) \
	liblmn_verifier_a-state.$(OBJEXT) \
	liblmn_verifier_a-statespace.$(OBJEXT) \
	liblmn_verifier_a-mem_encode.$(OBJEXT) \
	liblmn_verifier_a-delta_membrane.$(OBJEXT) \
	liblmn_verifier_a-binstr_compress.$(OBJEXT)
liblmn_verifier_a_OBJECTS = $(am_liblmn_verifier_a_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
LEXCOMPILE = $(LEX) $(AM_LFLAGS) $(LFLAGS)
LTLEXCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(LEX) $(AM_LFLAGS) $(LFLAGS)
YLWRAP = $(top_srcdir)/ylwrap
am__yacc_c2h = sed -e s/cc$$/hh/ -e s/cpp$$/hpp/ -e s/cxx$$/hxx/ \
		   -e s/c++$$/h++/ -e s/c$$/h/
YACCCOMPILE = $(YACC) $(AM_YFLAGS) $(YFLAGS)
LTYACCCOMPILE = $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(YACC) $(AM_YFLAGS) $(YFLAGS)
SOURCES = $(liblmn_verifier_a_SOURCES)
DIST_SOURCES = $(liblmn_verifier_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/ryo/Programming/slim/missing --run aclocal-1.12
AMTAR = $${TAR-tar}
AR = ar
AUTOCONF = ${SHELL} /Users/ryo/Programming/slim/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/ryo/Programming/slim/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/ryo/Programming/slim/missing --run automake-1.12
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -Wall -O3  -g
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -mmmx -msse 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = dsymutil
DUMPBIN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = /usr/llvm-gcc-4.2/libexec/gcc/i686-apple-darwin11/4.2.1/ld
LDFLAGS = 
LEX = flex
LEXLIB = -ll
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lgomp -lz -lpthread 
LIBSTDCXX_LA_LINKER_FLAG = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBTOOL_DEPS = ./ltmain.sh
LIB_DIR = 
LIPO = lipo
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/ryo/Programming/slim/missing --run makeinfo
MKDIR_P = ../.././install-sh -c -d
NANOSLEEP_LIBS = 
NM = /opt/local/bin/nm
NMEDIT = nmedit
OBJCOPY = 
OBJDUMP = false
OBJEXT = o
OTOOL = otool
OTOOL64 = :
PACKAGE = slim
PACKAGE_BUGREPORT = lmntal@ueda.info.waseda.ac.jp
PACKAGE_NAME = SLIM
PACKAGE_STRING = SLIM 2.2.2
PACKAGE_TARNAME = slim
PACKAGE_URL = 
PACKAGE_VERSION = 2.2.2
PATH_SEPARATOR = :
PROFILER_SO_VERSION = 1:1:1
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -D_THREAD_SAFE 
PTHREAD_LIBS = 
RANLIB = ranlib
ROOT_DIR = 
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
SLIM_VERSION = 2.2.2
STRIP = strip
TCMALLOC_SO_VERSION = 2:2:2
TC_VERSION_MAJOR = 2
TC_VERSION_MINOR = 2
TC_VERSION_PATCH = .2
UNWIND_LIBS = 
VERSION = 2.2.2
YACC = bison -y
YFLAGS = 
abs_builddir = /Users/ryo/Programming/slim/src/verifier
abs_srcdir = /Users/ryo/Programming/slim/src/verifier
abs_top_builddir = /Users/ryo/Programming/slim
abs_top_srcdir = /Users/ryo/Programming/slim
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
ac_cv_have_struct_mallinfo = 0
acx_pthread_config = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-apple-darwin12.0.0
build_alias = 
build_cpu = x86_64
build_os = darwin12.0.0
build_vendor = apple
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-apple-darwin12.0.0
host_alias = 
host_cpu = x86_64
host_os = darwin12.0.0
host_vendor = apple
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/ryo/Programming/slim/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
lt_ECHO = /bin/echo
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-apple-darwin12.0.0
target_alias = 
target_cpu = x86_64
target_os = darwin12.0.0
target_vendor = apple
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = liblmn_verifier.a
AM_LFLAGS = -P $(patsubst %_lexer.l,%,$<)  \
           --header-file=$(patsubst %.l,%.h,$<) -o $(patsubst %.l,%.c,$<)

AM_YFLAGS = -d -p $(patsubst %_parser.y,%,$<) -o $(patsubst %.y,%.c,$<)
PARSERS = nc_parser nc_lexer propsym_parser propsym_lexer
PARSER_HEADER = $(patsubst %, %.h, $(PARSERS))
PARSER_SOURCE = $(patsubst %, %.c, $(PARSERS))
BUILT_SOURCES = $(PARSER_SOURCE)
CLEANFILES = $(PARSER_SOURCE) $(PARSER_HEADER)
liblmn_verifier_a_DEPENDENCIES = \
        ../../third_party/zdelta-2.1/libzd_in_slim.a

liblmn_verifier_a_CFLAGS = \
        -I../                                            \
        -I../utility                                     \
        -I../../third_party/zdelta-2.1                   \
        $(CFLAGS)

liblmn_verifier_a_SOURCES = \
	nc_parser.y	             nc_lexer.l                    \
	propsym_parser.y         propsym_lexer.l               \
	propositional_symbol.c   propositional_symbol.h        \
	automata.c               automata.h                    \
	ltl2ba_adapter.c         ltl2ba_adapter.h              \
	mc.c                     mc.h                          \
	mc_worker.c              mc_worker.h                   \
	mc_generator.c           mc_generator.h                \
	mc_explorer.c            mc_explorer.h                 \
	mhash.c                  mhash.h                       \
	dpor.c                   dpor.h                        \
	dpor_naive.c             dpor_naive.h                  \
	state.c                  state.h                       \
	statespace.c             statespace.h                  \
	mem_encode.c             mem_encode.h                  \
	delta_membrane.c         delta_membrane.h              \
	binstr_compress.c        binstr_compress.h 

EXTRA_DIST = $(PARSER_SOURCE) $(PARSER_HEADER)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .l .lo .o .obj .y
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/verifier/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/verifier/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
nc_parser.h: nc_parser.c
	@if test ! -f $@; then rm -f nc_parser.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) nc_parser.c; else :; fi
propsym_parser.h: propsym_parser.c
	@if test ! -f $@; then rm -f propsym_parser.c; else :; fi
	@if test ! -f $@; then $(MAKE) $(AM_MAKEFLAGS) propsym_parser.c; else :; fi
liblmn_verifier.a: $(liblmn_verifier_a_OBJECTS) $(liblmn_verifier_a_DEPENDENCIES) $(EXTRA_liblmn_verifier_a_DEPENDENCIES) 
	-rm -f liblmn_verifier.a
	$(liblmn_verifier_a_AR) liblmn_verifier.a $(liblmn_verifier_a_OBJECTS) $(liblmn_verifier_a_LIBADD)
	$(RANLIB) liblmn_verifier.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/liblmn_verifier_a-automata.Po
include ./$(DEPDIR)/liblmn_verifier_a-binstr_compress.Po
include ./$(DEPDIR)/liblmn_verifier_a-delta_membrane.Po
include ./$(DEPDIR)/liblmn_verifier_a-dpor.Po
include ./$(DEPDIR)/liblmn_verifier_a-dpor_naive.Po
include ./$(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Po
include ./$(DEPDIR)/liblmn_verifier_a-mc.Po
include ./$(DEPDIR)/liblmn_verifier_a-mc_explorer.Po
include ./$(DEPDIR)/liblmn_verifier_a-mc_generator.Po
include ./$(DEPDIR)/liblmn_verifier_a-mc_worker.Po
include ./$(DEPDIR)/liblmn_verifier_a-mem_encode.Po
include ./$(DEPDIR)/liblmn_verifier_a-mhash.Po
include ./$(DEPDIR)/liblmn_verifier_a-nc_lexer.Po
include ./$(DEPDIR)/liblmn_verifier_a-nc_parser.Po
include ./$(DEPDIR)/liblmn_verifier_a-propositional_symbol.Po
include ./$(DEPDIR)/liblmn_verifier_a-propsym_lexer.Po
include ./$(DEPDIR)/liblmn_verifier_a-propsym_parser.Po
include ./$(DEPDIR)/liblmn_verifier_a-state.Po
include ./$(DEPDIR)/liblmn_verifier_a-statespace.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

liblmn_verifier_a-nc_parser.o: nc_parser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-nc_parser.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-nc_parser.Tpo -c -o liblmn_verifier_a-nc_parser.o `test -f 'nc_parser.c' || echo '$(srcdir)/'`nc_parser.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-nc_parser.Tpo $(DEPDIR)/liblmn_verifier_a-nc_parser.Po
#	source='nc_parser.c' object='liblmn_verifier_a-nc_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-nc_parser.o `test -f 'nc_parser.c' || echo '$(srcdir)/'`nc_parser.c

liblmn_verifier_a-nc_parser.obj: nc_parser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-nc_parser.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-nc_parser.Tpo -c -o liblmn_verifier_a-nc_parser.obj `if test -f 'nc_parser.c'; then $(CYGPATH_W) 'nc_parser.c'; else $(CYGPATH_W) '$(srcdir)/nc_parser.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-nc_parser.Tpo $(DEPDIR)/liblmn_verifier_a-nc_parser.Po
#	source='nc_parser.c' object='liblmn_verifier_a-nc_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-nc_parser.obj `if test -f 'nc_parser.c'; then $(CYGPATH_W) 'nc_parser.c'; else $(CYGPATH_W) '$(srcdir)/nc_parser.c'; fi`

liblmn_verifier_a-nc_lexer.o: nc_lexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-nc_lexer.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-nc_lexer.Tpo -c -o liblmn_verifier_a-nc_lexer.o `test -f 'nc_lexer.c' || echo '$(srcdir)/'`nc_lexer.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-nc_lexer.Tpo $(DEPDIR)/liblmn_verifier_a-nc_lexer.Po
#	source='nc_lexer.c' object='liblmn_verifier_a-nc_lexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-nc_lexer.o `test -f 'nc_lexer.c' || echo '$(srcdir)/'`nc_lexer.c

liblmn_verifier_a-nc_lexer.obj: nc_lexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-nc_lexer.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-nc_lexer.Tpo -c -o liblmn_verifier_a-nc_lexer.obj `if test -f 'nc_lexer.c'; then $(CYGPATH_W) 'nc_lexer.c'; else $(CYGPATH_W) '$(srcdir)/nc_lexer.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-nc_lexer.Tpo $(DEPDIR)/liblmn_verifier_a-nc_lexer.Po
#	source='nc_lexer.c' object='liblmn_verifier_a-nc_lexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-nc_lexer.obj `if test -f 'nc_lexer.c'; then $(CYGPATH_W) 'nc_lexer.c'; else $(CYGPATH_W) '$(srcdir)/nc_lexer.c'; fi`

liblmn_verifier_a-propsym_parser.o: propsym_parser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-propsym_parser.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-propsym_parser.Tpo -c -o liblmn_verifier_a-propsym_parser.o `test -f 'propsym_parser.c' || echo '$(srcdir)/'`propsym_parser.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-propsym_parser.Tpo $(DEPDIR)/liblmn_verifier_a-propsym_parser.Po
#	source='propsym_parser.c' object='liblmn_verifier_a-propsym_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-propsym_parser.o `test -f 'propsym_parser.c' || echo '$(srcdir)/'`propsym_parser.c

liblmn_verifier_a-propsym_parser.obj: propsym_parser.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-propsym_parser.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-propsym_parser.Tpo -c -o liblmn_verifier_a-propsym_parser.obj `if test -f 'propsym_parser.c'; then $(CYGPATH_W) 'propsym_parser.c'; else $(CYGPATH_W) '$(srcdir)/propsym_parser.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-propsym_parser.Tpo $(DEPDIR)/liblmn_verifier_a-propsym_parser.Po
#	source='propsym_parser.c' object='liblmn_verifier_a-propsym_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-propsym_parser.obj `if test -f 'propsym_parser.c'; then $(CYGPATH_W) 'propsym_parser.c'; else $(CYGPATH_W) '$(srcdir)/propsym_parser.c'; fi`

liblmn_verifier_a-propsym_lexer.o: propsym_lexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-propsym_lexer.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-propsym_lexer.Tpo -c -o liblmn_verifier_a-propsym_lexer.o `test -f 'propsym_lexer.c' || echo '$(srcdir)/'`propsym_lexer.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-propsym_lexer.Tpo $(DEPDIR)/liblmn_verifier_a-propsym_lexer.Po
#	source='propsym_lexer.c' object='liblmn_verifier_a-propsym_lexer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-propsym_lexer.o `test -f 'propsym_lexer.c' || echo '$(srcdir)/'`propsym_lexer.c

liblmn_verifier_a-propsym_lexer.obj: propsym_lexer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-propsym_lexer.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-propsym_lexer.Tpo -c -o liblmn_verifier_a-propsym_lexer.obj `if test -f 'propsym_lexer.c'; then $(CYGPATH_W) 'propsym_lexer.c'; else $(CYGPATH_W) '$(srcdir)/propsym_lexer.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-propsym_lexer.Tpo $(DEPDIR)/liblmn_verifier_a-propsym_lexer.Po
#	source='propsym_lexer.c' object='liblmn_verifier_a-propsym_lexer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-propsym_lexer.obj `if test -f 'propsym_lexer.c'; then $(CYGPATH_W) 'propsym_lexer.c'; else $(CYGPATH_W) '$(srcdir)/propsym_lexer.c'; fi`

liblmn_verifier_a-propositional_symbol.o: propositional_symbol.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-propositional_symbol.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-propositional_symbol.Tpo -c -o liblmn_verifier_a-propositional_symbol.o `test -f 'propositional_symbol.c' || echo '$(srcdir)/'`propositional_symbol.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-propositional_symbol.Tpo $(DEPDIR)/liblmn_verifier_a-propositional_symbol.Po
#	source='propositional_symbol.c' object='liblmn_verifier_a-propositional_symbol.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-propositional_symbol.o `test -f 'propositional_symbol.c' || echo '$(srcdir)/'`propositional_symbol.c

liblmn_verifier_a-propositional_symbol.obj: propositional_symbol.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-propositional_symbol.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-propositional_symbol.Tpo -c -o liblmn_verifier_a-propositional_symbol.obj `if test -f 'propositional_symbol.c'; then $(CYGPATH_W) 'propositional_symbol.c'; else $(CYGPATH_W) '$(srcdir)/propositional_symbol.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-propositional_symbol.Tpo $(DEPDIR)/liblmn_verifier_a-propositional_symbol.Po
#	source='propositional_symbol.c' object='liblmn_verifier_a-propositional_symbol.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-propositional_symbol.obj `if test -f 'propositional_symbol.c'; then $(CYGPATH_W) 'propositional_symbol.c'; else $(CYGPATH_W) '$(srcdir)/propositional_symbol.c'; fi`

liblmn_verifier_a-automata.o: automata.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-automata.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-automata.Tpo -c -o liblmn_verifier_a-automata.o `test -f 'automata.c' || echo '$(srcdir)/'`automata.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-automata.Tpo $(DEPDIR)/liblmn_verifier_a-automata.Po
#	source='automata.c' object='liblmn_verifier_a-automata.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-automata.o `test -f 'automata.c' || echo '$(srcdir)/'`automata.c

liblmn_verifier_a-automata.obj: automata.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-automata.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-automata.Tpo -c -o liblmn_verifier_a-automata.obj `if test -f 'automata.c'; then $(CYGPATH_W) 'automata.c'; else $(CYGPATH_W) '$(srcdir)/automata.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-automata.Tpo $(DEPDIR)/liblmn_verifier_a-automata.Po
#	source='automata.c' object='liblmn_verifier_a-automata.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-automata.obj `if test -f 'automata.c'; then $(CYGPATH_W) 'automata.c'; else $(CYGPATH_W) '$(srcdir)/automata.c'; fi`

liblmn_verifier_a-ltl2ba_adapter.o: ltl2ba_adapter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-ltl2ba_adapter.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Tpo -c -o liblmn_verifier_a-ltl2ba_adapter.o `test -f 'ltl2ba_adapter.c' || echo '$(srcdir)/'`ltl2ba_adapter.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Tpo $(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Po
#	source='ltl2ba_adapter.c' object='liblmn_verifier_a-ltl2ba_adapter.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-ltl2ba_adapter.o `test -f 'ltl2ba_adapter.c' || echo '$(srcdir)/'`ltl2ba_adapter.c

liblmn_verifier_a-ltl2ba_adapter.obj: ltl2ba_adapter.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-ltl2ba_adapter.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Tpo -c -o liblmn_verifier_a-ltl2ba_adapter.obj `if test -f 'ltl2ba_adapter.c'; then $(CYGPATH_W) 'ltl2ba_adapter.c'; else $(CYGPATH_W) '$(srcdir)/ltl2ba_adapter.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Tpo $(DEPDIR)/liblmn_verifier_a-ltl2ba_adapter.Po
#	source='ltl2ba_adapter.c' object='liblmn_verifier_a-ltl2ba_adapter.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-ltl2ba_adapter.obj `if test -f 'ltl2ba_adapter.c'; then $(CYGPATH_W) 'ltl2ba_adapter.c'; else $(CYGPATH_W) '$(srcdir)/ltl2ba_adapter.c'; fi`

liblmn_verifier_a-mc.o: mc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc.Tpo -c -o liblmn_verifier_a-mc.o `test -f 'mc.c' || echo '$(srcdir)/'`mc.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc.Tpo $(DEPDIR)/liblmn_verifier_a-mc.Po
#	source='mc.c' object='liblmn_verifier_a-mc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc.o `test -f 'mc.c' || echo '$(srcdir)/'`mc.c

liblmn_verifier_a-mc.obj: mc.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc.Tpo -c -o liblmn_verifier_a-mc.obj `if test -f 'mc.c'; then $(CYGPATH_W) 'mc.c'; else $(CYGPATH_W) '$(srcdir)/mc.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc.Tpo $(DEPDIR)/liblmn_verifier_a-mc.Po
#	source='mc.c' object='liblmn_verifier_a-mc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc.obj `if test -f 'mc.c'; then $(CYGPATH_W) 'mc.c'; else $(CYGPATH_W) '$(srcdir)/mc.c'; fi`

liblmn_verifier_a-mc_worker.o: mc_worker.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc_worker.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc_worker.Tpo -c -o liblmn_verifier_a-mc_worker.o `test -f 'mc_worker.c' || echo '$(srcdir)/'`mc_worker.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc_worker.Tpo $(DEPDIR)/liblmn_verifier_a-mc_worker.Po
#	source='mc_worker.c' object='liblmn_verifier_a-mc_worker.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc_worker.o `test -f 'mc_worker.c' || echo '$(srcdir)/'`mc_worker.c

liblmn_verifier_a-mc_worker.obj: mc_worker.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc_worker.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc_worker.Tpo -c -o liblmn_verifier_a-mc_worker.obj `if test -f 'mc_worker.c'; then $(CYGPATH_W) 'mc_worker.c'; else $(CYGPATH_W) '$(srcdir)/mc_worker.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc_worker.Tpo $(DEPDIR)/liblmn_verifier_a-mc_worker.Po
#	source='mc_worker.c' object='liblmn_verifier_a-mc_worker.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc_worker.obj `if test -f 'mc_worker.c'; then $(CYGPATH_W) 'mc_worker.c'; else $(CYGPATH_W) '$(srcdir)/mc_worker.c'; fi`

liblmn_verifier_a-mc_generator.o: mc_generator.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc_generator.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc_generator.Tpo -c -o liblmn_verifier_a-mc_generator.o `test -f 'mc_generator.c' || echo '$(srcdir)/'`mc_generator.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc_generator.Tpo $(DEPDIR)/liblmn_verifier_a-mc_generator.Po
#	source='mc_generator.c' object='liblmn_verifier_a-mc_generator.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc_generator.o `test -f 'mc_generator.c' || echo '$(srcdir)/'`mc_generator.c

liblmn_verifier_a-mc_generator.obj: mc_generator.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc_generator.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc_generator.Tpo -c -o liblmn_verifier_a-mc_generator.obj `if test -f 'mc_generator.c'; then $(CYGPATH_W) 'mc_generator.c'; else $(CYGPATH_W) '$(srcdir)/mc_generator.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc_generator.Tpo $(DEPDIR)/liblmn_verifier_a-mc_generator.Po
#	source='mc_generator.c' object='liblmn_verifier_a-mc_generator.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc_generator.obj `if test -f 'mc_generator.c'; then $(CYGPATH_W) 'mc_generator.c'; else $(CYGPATH_W) '$(srcdir)/mc_generator.c'; fi`

liblmn_verifier_a-mc_explorer.o: mc_explorer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc_explorer.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc_explorer.Tpo -c -o liblmn_verifier_a-mc_explorer.o `test -f 'mc_explorer.c' || echo '$(srcdir)/'`mc_explorer.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc_explorer.Tpo $(DEPDIR)/liblmn_verifier_a-mc_explorer.Po
#	source='mc_explorer.c' object='liblmn_verifier_a-mc_explorer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc_explorer.o `test -f 'mc_explorer.c' || echo '$(srcdir)/'`mc_explorer.c

liblmn_verifier_a-mc_explorer.obj: mc_explorer.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mc_explorer.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mc_explorer.Tpo -c -o liblmn_verifier_a-mc_explorer.obj `if test -f 'mc_explorer.c'; then $(CYGPATH_W) 'mc_explorer.c'; else $(CYGPATH_W) '$(srcdir)/mc_explorer.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mc_explorer.Tpo $(DEPDIR)/liblmn_verifier_a-mc_explorer.Po
#	source='mc_explorer.c' object='liblmn_verifier_a-mc_explorer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mc_explorer.obj `if test -f 'mc_explorer.c'; then $(CYGPATH_W) 'mc_explorer.c'; else $(CYGPATH_W) '$(srcdir)/mc_explorer.c'; fi`

liblmn_verifier_a-mhash.o: mhash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mhash.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mhash.Tpo -c -o liblmn_verifier_a-mhash.o `test -f 'mhash.c' || echo '$(srcdir)/'`mhash.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mhash.Tpo $(DEPDIR)/liblmn_verifier_a-mhash.Po
#	source='mhash.c' object='liblmn_verifier_a-mhash.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mhash.o `test -f 'mhash.c' || echo '$(srcdir)/'`mhash.c

liblmn_verifier_a-mhash.obj: mhash.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mhash.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mhash.Tpo -c -o liblmn_verifier_a-mhash.obj `if test -f 'mhash.c'; then $(CYGPATH_W) 'mhash.c'; else $(CYGPATH_W) '$(srcdir)/mhash.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mhash.Tpo $(DEPDIR)/liblmn_verifier_a-mhash.Po
#	source='mhash.c' object='liblmn_verifier_a-mhash.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mhash.obj `if test -f 'mhash.c'; then $(CYGPATH_W) 'mhash.c'; else $(CYGPATH_W) '$(srcdir)/mhash.c'; fi`

liblmn_verifier_a-dpor.o: dpor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-dpor.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-dpor.Tpo -c -o liblmn_verifier_a-dpor.o `test -f 'dpor.c' || echo '$(srcdir)/'`dpor.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-dpor.Tpo $(DEPDIR)/liblmn_verifier_a-dpor.Po
#	source='dpor.c' object='liblmn_verifier_a-dpor.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-dpor.o `test -f 'dpor.c' || echo '$(srcdir)/'`dpor.c

liblmn_verifier_a-dpor.obj: dpor.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-dpor.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-dpor.Tpo -c -o liblmn_verifier_a-dpor.obj `if test -f 'dpor.c'; then $(CYGPATH_W) 'dpor.c'; else $(CYGPATH_W) '$(srcdir)/dpor.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-dpor.Tpo $(DEPDIR)/liblmn_verifier_a-dpor.Po
#	source='dpor.c' object='liblmn_verifier_a-dpor.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-dpor.obj `if test -f 'dpor.c'; then $(CYGPATH_W) 'dpor.c'; else $(CYGPATH_W) '$(srcdir)/dpor.c'; fi`

liblmn_verifier_a-dpor_naive.o: dpor_naive.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-dpor_naive.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-dpor_naive.Tpo -c -o liblmn_verifier_a-dpor_naive.o `test -f 'dpor_naive.c' || echo '$(srcdir)/'`dpor_naive.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-dpor_naive.Tpo $(DEPDIR)/liblmn_verifier_a-dpor_naive.Po
#	source='dpor_naive.c' object='liblmn_verifier_a-dpor_naive.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-dpor_naive.o `test -f 'dpor_naive.c' || echo '$(srcdir)/'`dpor_naive.c

liblmn_verifier_a-dpor_naive.obj: dpor_naive.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-dpor_naive.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-dpor_naive.Tpo -c -o liblmn_verifier_a-dpor_naive.obj `if test -f 'dpor_naive.c'; then $(CYGPATH_W) 'dpor_naive.c'; else $(CYGPATH_W) '$(srcdir)/dpor_naive.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-dpor_naive.Tpo $(DEPDIR)/liblmn_verifier_a-dpor_naive.Po
#	source='dpor_naive.c' object='liblmn_verifier_a-dpor_naive.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-dpor_naive.obj `if test -f 'dpor_naive.c'; then $(CYGPATH_W) 'dpor_naive.c'; else $(CYGPATH_W) '$(srcdir)/dpor_naive.c'; fi`

liblmn_verifier_a-state.o: state.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-state.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-state.Tpo -c -o liblmn_verifier_a-state.o `test -f 'state.c' || echo '$(srcdir)/'`state.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-state.Tpo $(DEPDIR)/liblmn_verifier_a-state.Po
#	source='state.c' object='liblmn_verifier_a-state.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-state.o `test -f 'state.c' || echo '$(srcdir)/'`state.c

liblmn_verifier_a-state.obj: state.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-state.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-state.Tpo -c -o liblmn_verifier_a-state.obj `if test -f 'state.c'; then $(CYGPATH_W) 'state.c'; else $(CYGPATH_W) '$(srcdir)/state.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-state.Tpo $(DEPDIR)/liblmn_verifier_a-state.Po
#	source='state.c' object='liblmn_verifier_a-state.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-state.obj `if test -f 'state.c'; then $(CYGPATH_W) 'state.c'; else $(CYGPATH_W) '$(srcdir)/state.c'; fi`

liblmn_verifier_a-statespace.o: statespace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-statespace.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-statespace.Tpo -c -o liblmn_verifier_a-statespace.o `test -f 'statespace.c' || echo '$(srcdir)/'`statespace.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-statespace.Tpo $(DEPDIR)/liblmn_verifier_a-statespace.Po
#	source='statespace.c' object='liblmn_verifier_a-statespace.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-statespace.o `test -f 'statespace.c' || echo '$(srcdir)/'`statespace.c

liblmn_verifier_a-statespace.obj: statespace.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-statespace.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-statespace.Tpo -c -o liblmn_verifier_a-statespace.obj `if test -f 'statespace.c'; then $(CYGPATH_W) 'statespace.c'; else $(CYGPATH_W) '$(srcdir)/statespace.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-statespace.Tpo $(DEPDIR)/liblmn_verifier_a-statespace.Po
#	source='statespace.c' object='liblmn_verifier_a-statespace.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-statespace.obj `if test -f 'statespace.c'; then $(CYGPATH_W) 'statespace.c'; else $(CYGPATH_W) '$(srcdir)/statespace.c'; fi`

liblmn_verifier_a-mem_encode.o: mem_encode.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mem_encode.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mem_encode.Tpo -c -o liblmn_verifier_a-mem_encode.o `test -f 'mem_encode.c' || echo '$(srcdir)/'`mem_encode.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mem_encode.Tpo $(DEPDIR)/liblmn_verifier_a-mem_encode.Po
#	source='mem_encode.c' object='liblmn_verifier_a-mem_encode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mem_encode.o `test -f 'mem_encode.c' || echo '$(srcdir)/'`mem_encode.c

liblmn_verifier_a-mem_encode.obj: mem_encode.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-mem_encode.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-mem_encode.Tpo -c -o liblmn_verifier_a-mem_encode.obj `if test -f 'mem_encode.c'; then $(CYGPATH_W) 'mem_encode.c'; else $(CYGPATH_W) '$(srcdir)/mem_encode.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-mem_encode.Tpo $(DEPDIR)/liblmn_verifier_a-mem_encode.Po
#	source='mem_encode.c' object='liblmn_verifier_a-mem_encode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-mem_encode.obj `if test -f 'mem_encode.c'; then $(CYGPATH_W) 'mem_encode.c'; else $(CYGPATH_W) '$(srcdir)/mem_encode.c'; fi`

liblmn_verifier_a-delta_membrane.o: delta_membrane.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-delta_membrane.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-delta_membrane.Tpo -c -o liblmn_verifier_a-delta_membrane.o `test -f 'delta_membrane.c' || echo '$(srcdir)/'`delta_membrane.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-delta_membrane.Tpo $(DEPDIR)/liblmn_verifier_a-delta_membrane.Po
#	source='delta_membrane.c' object='liblmn_verifier_a-delta_membrane.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-delta_membrane.o `test -f 'delta_membrane.c' || echo '$(srcdir)/'`delta_membrane.c

liblmn_verifier_a-delta_membrane.obj: delta_membrane.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-delta_membrane.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-delta_membrane.Tpo -c -o liblmn_verifier_a-delta_membrane.obj `if test -f 'delta_membrane.c'; then $(CYGPATH_W) 'delta_membrane.c'; else $(CYGPATH_W) '$(srcdir)/delta_membrane.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-delta_membrane.Tpo $(DEPDIR)/liblmn_verifier_a-delta_membrane.Po
#	source='delta_membrane.c' object='liblmn_verifier_a-delta_membrane.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-delta_membrane.obj `if test -f 'delta_membrane.c'; then $(CYGPATH_W) 'delta_membrane.c'; else $(CYGPATH_W) '$(srcdir)/delta_membrane.c'; fi`

liblmn_verifier_a-binstr_compress.o: binstr_compress.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-binstr_compress.o -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-binstr_compress.Tpo -c -o liblmn_verifier_a-binstr_compress.o `test -f 'binstr_compress.c' || echo '$(srcdir)/'`binstr_compress.c
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-binstr_compress.Tpo $(DEPDIR)/liblmn_verifier_a-binstr_compress.Po
#	source='binstr_compress.c' object='liblmn_verifier_a-binstr_compress.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-binstr_compress.o `test -f 'binstr_compress.c' || echo '$(srcdir)/'`binstr_compress.c

liblmn_verifier_a-binstr_compress.obj: binstr_compress.c
	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -MT liblmn_verifier_a-binstr_compress.obj -MD -MP -MF $(DEPDIR)/liblmn_verifier_a-binstr_compress.Tpo -c -o liblmn_verifier_a-binstr_compress.obj `if test -f 'binstr_compress.c'; then $(CYGPATH_W) 'binstr_compress.c'; else $(CYGPATH_W) '$(srcdir)/binstr_compress.c'; fi`
	$(am__mv) $(DEPDIR)/liblmn_verifier_a-binstr_compress.Tpo $(DEPDIR)/liblmn_verifier_a-binstr_compress.Po
#	source='binstr_compress.c' object='liblmn_verifier_a-binstr_compress.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblmn_verifier_a_CFLAGS) $(CFLAGS) -c -o liblmn_verifier_a-binstr_compress.obj `if test -f 'binstr_compress.c'; then $(CYGPATH_W) 'binstr_compress.c'; else $(CYGPATH_W) '$(srcdir)/binstr_compress.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

cscopelist:  $(HEADERS) $(SOURCES) $(LISP)
	list='$(SOURCES) $(HEADERS) $(LISP)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-rm -f nc_lexer.c
	-rm -f nc_parser.c
	-rm -f nc_parser.h
	-rm -f propsym_lexer.c
	-rm -f propsym_parser.c
	-rm -f propsym_parser.h
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES cscopelist ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am


.l.c:
	$(LEX) $(LFLAGS) $(AM_LFLAGS) $<
.y.c:
	$(YACC) $(YFLAGS) $(AM_YFLAGS) $<

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
