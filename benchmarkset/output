CounterExamplePaths 1::T0_init{daemon{@7. }, recver{key(0). @6. }, sender{mnum(10000). msg(0,0). @5. }. @8. } 2::T0_init{daemon{msg(0,0). @7. }, recver{key(0). @6. }, sender{mnum(10000). exp(0,0). @5. }. @8. } 3::T0_init{sender{mnum(10000). exp(0,0). @5. }, recver{key(0). @6. }, daemon{m2r(0,0). @7. }. @8. } 5::T0_init{daemon{@7. }, recver{key(0). msg(0,0). @6. }, sender{mnum(10000). exp(0,0). @5. }. @8. } 6::T0_init{sender{mnum(10000). exp(0,0). @5. }, recver{key(1). ack(0,0). @6. }, daemon{@7. }. @8. } 7::T0_init{daemon{ack(0,0). @7. }, recver{key(1). @6. }, sender{mnum(10000). exp(0,0). @5. }. @8. } 8::T0_init{sender{mnum(10000). exp(0,0). @5. }, recver{key(1). @6. }, daemon{r2s(0,0). @7. }. @8. } 14::T0_init{daemon{@7. }, recver{key(1). @6. }, sender{mnum(10000). exp(0,0). ack(0,0). @5. }. @8. } 15::T0_init{daemon{@7. }, recver{key(1). @6. }, sender{mnum(10000). msg(1,1). @5. }. @8. } 16::T0_init{daemon{msg(1,1). @7. }, recver{key(1). @6. }, sender{mnum(10000). exp(1,1). @5. }. @8. } *34::accept_S2{daemon{@7. }, recver{key(1). @6. }, sender{mnum(10000). exp(1,1). @5. }. @8. } 36::accept_S2{daemon{@7. }, recver{key(1). @6. }, sender{mnum(10000). msg(1,1). @5. }. @8. } 37::accept_S2{daemon{msg(1,1). @7. }, recver{key(1). @6. }, sender{mnum(10000). exp(1,1). @5. }. @8. } *34::accept_S2{daemon{@7. }, recver{key(1). @6. }, sender{mnum(10000). exp(1,1). @5. }. @8. } '# of States'(stored) = 37. '# of States'(end) = 1. '# of States'(invalid) = 0. [4m[36m[m[4m[36m[m[4m[36m[m
