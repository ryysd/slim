/*  
 *  switch.lmn
 *
 *  @author  Masato Gocho
 *  @date    2010.10.13
 *
 */


/*
 * 各変数は同期して値が変化する
 * 変数aは0→1,1→2,2→0と繰り返して変化する。ただしb=1のときは
 * 次の時点でもその値を保ち変化しない。初期状態は0とする。
 * 変数bも0→1,1→2,2→0と繰り返して変化する。ただしa=bのときは
 * 次の時点でもその値を保ち変化しない。初期状態は0とする。
 * スイッチはa=b=2ならonとなり、a=b=1ならoffとなる。それ以外の
 * 場合は次の時点でもその値を変化しない。初期状態はoffとする。
 */

a=0, b=0, s=off, m=2. % m is limits
sync{
  s_on_ @@ a(A), b(B) \ s(S)  :- A=:=B, A=:=2, unary(S)   | s(on).
  s_off @@ a(A), b(B) \ s(S)  :- A=:=B, A=:=1, unary(S)   | s(off).
  a_adv @@ a(A), b(B), m(M) \ :- B=\=1, Z=(A+1) mod (M+1) | a_next(Z).
  b_adv @@ a(A), b(B), m(M) \ :- A=\=B, Z=(B+1) mod (M+1) | b_next(Z).
  a_com @@ a(A), a_next(N)    :- int(A) | a(N).
  b_com @@ b(B), b_next(N)    :- int(B) | b(N).
}.

initial_ruleset{ sync{@p.} :- {'$callback'('atomic_ruleset', 3), @p}.}.