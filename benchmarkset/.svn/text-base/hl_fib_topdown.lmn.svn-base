/* 
 * Fibonacci(topdown) in HyperLMNtal(hyperlmn)
 * Author: Seiji OGAWA, 2011-03-31
 *
 * Examples are taken from:
 *   http://dtai.cs.kuleuven.be/CHR/examples.shtml
 *
 * If you'd like to change parameter N, 
 * please change the 1st argument of start("N").
 *
 */

{

  {
    start(9).
    list = [].
    start(S) :- int(S) | s(S, 0), fib(S).
    s(S, I), list = H :- S >= I, I1 = I+1, new($x) | s(S, I1), list = [n($x, I) | H].
    list = [n($x, X), n($y, Y), n($z, Z) | R] :- 
      hlink($x), int(X), hlink($y), int(Y), hlink($z), int(Z) |
      list = [n($y, Y), n($z, Z) | R], n($x, X, $y, Y, $z, Z).
    list = [n(X, 1), n(Y, 0)], fib(S), n(HN1, N1, HN2, N2, HN3, N3) :- 
      hlink(X), hlink(Y), S =:= N1, hlink(HN1) | fib(HN1, S, result(S)), n(HN1, N1, HN2, N2, HN3, N3).
  }.
  {$p, @p}/ :-$p.

  unify @@ fib($n, N1, M1), fib2($n, N2, M2) :- hlink(M1), int(N2) | fib($n, N1, M1), '><'(M1,M2).//M1 >< M2.
  fib1 @@ fib2(N1,0,M1), fib(N2,1,M2) :- hlink(N1), hlink(N2) | v2(M1, 1), v(M2, 1).
  fib3 @@
  fib($n, N, M), n($n, N_, $n1, N1, $n2, N2) :- 
    hlink($n1), hlink($n2), int(N), int(N_), int(N1), int(N2), new($x), new($y) |
    fib($n1, N1, $x), fib2($n2, N2, $y), M = $x + $y.

  add  @@
  v($x, X), v2($y, Y), H = $x + $y :- Z = X+Y | v(H, Z), v2($x, X).//, v($y, Y).

}.

